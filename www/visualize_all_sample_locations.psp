<%
#!/usr/bin/env python

__author__ = "Jesse Stombaugh"
__copyright__ = "Copyright 2010, Qiime Web Analysis"
__credits__ = ["Jesse Stombaugh", "Doug Wendel", "Emily TerAvest"]
__license__ = "GPL"
__version__ = "1.0.0.dev"
__maintainer__ = ["Doug Wendel"]
__email__ = "wendel@colorado.edu"
__status__ = "Production"


portal_type = sess['portal_type']

# Set variables
zoom_level = 2
center_lat = 0
center_long = 0
tiny_markers = False


if 'zoom_level' in form:
    zoom_level = form['zoom_level']
if 'center_lat' in form:
    center_lat = form['center_lat']
if 'center_long' in form:
    center_long = form['center_long']
if 'tiny_markers' in form:
    tiny_markers = form['tiny_markers']

%>

<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>
<script type="text/javascript">
function initialize() 
{
    var mapOptions = 
    {
<%
req.write('zoom: {0},'.format(zoom_level))
req.write('center: new google.maps.LatLng({0},{1}),'.format(center_lat, center_long))
# End if
%>        
        scrollwheel: false,
        mapTypeId: google.maps.MapTypeId.TERRAIN,
        mapTypeControl: false,
        streetViewControl: false,
        panControl: false
    };

    var map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);
    setMarkers(map, latlongs_db);
}

function setMarkers(map, locations)
{
    for (var i = 0; i < locations.length; i++)
    {
        var loc = locations[i];
        var myLatLng = new google.maps.LatLng(loc[1], loc[2]);

<%
if tiny_markers:
    # Indent
%>
        var marker = new google.maps.Marker({
          position:myLatLng,
          map: map,
          clickable: false,
          size:(10, 10),
          color:"00ff00",
          icon:'/qiime/img/blue_tiny.png'
        });
<%
else:
    # Indent
%>
        var pinColor = loc[4];
        var pinImage = new google.maps.MarkerImage("http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld= |" + pinColor,
            new google.maps.Size(21, 34),
            new google.maps.Point(0,0),
            new google.maps.Point(10, 34));
        var pinShadow = new google.maps.MarkerImage("http://chart.apis.google.com/chart?chst=d_map_pin_shadow",
            new google.maps.Size(40, 37),
            new google.maps.Point(0, 0),
            new google.maps.Point(12, 35));

        var marker = new google.maps.Marker({
            position: myLatLng,
            map: map,
            color: pinColor,
            clickable: false,
            icon: pinImage,
            shadow: pinShadow
        });

<%
# End if
%>


    }
}
</script>

<%
from data_access_connections import data_access_factory
from enums import ServerConfig,DataAccessType
import os
from enums import FieldGrouping
data_access = data_access_factory(ServerConfig.data_access_type)
from qiime.parse import parse_mapping_file

req.write('<script type="text/javascript">')
req.write('var latlongs_db = [')

result_list=[]
public_studies = data_access.getUserAndPublicStudyNames(12169, 1, portal_type)

if portal_type == 'americangut':
    statement = """
    select  distinct 'American Gut Participant', z.latitude, z.longitude
    from    ag_login agl
            inner join zipcodes z
            on agl.zip = z.zipcode
    where   agl.zip is not null
    """
else:
    statement = """
    select  distinct st.study_alias, s.latitude, s.longitude 
    from    sample s 
            inner join study st 
            on s.study_id = st.study_id 
    where   portal_type = '{0}' 
            and     s.latitude is not null 
            and s.longitude is not null 
    """.format(portal_type)

con = data_access.getMetadataDatabaseConnection()
cur = con.cursor()
results = cur.execute(statement)

for i, val in enumerate(results):
    if val[0] and val[1] and val[2]:
        study_alias = str(val[0]).replace("'", "\\'")
        result_list.append("\n['{0}',{1},{2},{3},'00B2EE']".format(study_alias, val[1], val[2], str(i+1)))

req.write('%s];' % ','.join(result_list))
req.write('window.onload=initialize;</script>')

%>

<div id="map_canvas" style="width:100%; height:100%; border:1px solid black;"></div>

