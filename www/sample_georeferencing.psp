<%
#!/usr/bin/env python

__author__ = "Jesse Stombaugh"
__copyright__ = "Copyright 2010, Qiime Web Analysis"
__credits__ = ["Jesse Stombaugh"]
__license__ = "GPL"
__version__ = "1.0.0.dev"
__maintainer__ = ["Jesse Stombaugh"]
__email__ = "jesse.stombaugh@colorado.edu"
__status__ = "Production"

from data_access_connections import data_access_factory
from enums import ServerConfig,DataAccessType
import os
from enums import FieldGrouping
data_access = data_access_factory(DataAccessType.qiime_production)
from qiime.parse import parse_mapping_file

req.write('<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>')
req.write('<script type="text/javascript" src="./js/sample_geo.js"></script>')
req.write('<script type="text/javascript">')
req.write('var latlongs_db = [')

result_list=[]



portal_type='qiime'
public_studies=data_access.getUserAndPublicStudyNames(12171,1,portal_type)
study_ids=list(zip(*public_studies)[0])
statement="select distinct st.study_alias,s.latitude,s.longitude from sample s inner join study st on s.study_id=st.study_id where portal_type='%s'" % (portal_type)
added_where_clause=[]
for i in study_ids:
    added_where_clause.append("st.study_id=%s" % (str(i)))    
statement+=" and (%s)" % (' or '.join(added_where_clause))

con = data_access.getMetadataDatabaseConnection()
cur = con.cursor()
results = cur.execute(statement)

for i,val in enumerate(results):
    if val[0] and val[1] and val[2]:
        result_list.append('[\''+str(val[0])+'\','+str(val[1])+','+str(val[2])+','+str(i+1)+',\'00B2EE\']')
        
        
portal_type='emp'
public_studies=data_access.getUserAndPublicStudyNames(12171,1,portal_type)
study_ids=list(zip(*public_studies)[0])
statement="select distinct st.study_alias,s.latitude,s.longitude from sample s inner join study st on s.study_id=st.study_id where portal_type='%s'" % (portal_type)
added_where_clause=[]
for i in study_ids:
    added_where_clause.append("st.study_id=%s" % (str(i)))    
statement+=" and (%s)" % (' or '.join(added_where_clause))

con = data_access.getMetadataDatabaseConnection()
cur = con.cursor()
results = cur.execute(statement)

for i,val in enumerate(results):
    if val[0] and val[1] and val[2]:
        result_list.append('[\''+str(val[0])+'\','+str(val[1])+','+str(val[2])+','+str(i+1)+',\'ff69b4\']')

'''

results=[["Bonnie OA Samples",50.25,4.216667],
["McMahon Bog Lakes",46.041014,-89.686411],
["Cansu L4",50.25,4.216667],
["Catlin DNA",78.7115,-104.8776666],
["Russian Tundra",69.43513,-97.738728],
["Russian Tundra 2", 74.462540,-97.738728],
["Bergen Mesocosm",60.269444,5.222222],
["Tatoosh Island",48.32,-124.74],
["C-MORE HOT",22.75,-158],
["McMurdo Dry Valley",-77.4348,162.1891],
["Exotic vs. Native Grassland",31.1,-97.34],
["Switchgrass Spatial Study",41.841521,-88.229872]]

for i,val in enumerate(results):
    if val[0] and val[1] and val[2]:
        result_list.append('[\''+str(val[0])+'\','+str(val[1])+','+str(val[2])+','+str(i+1)+',\'FFFF00\']')


map_fp='/home/wwwdevuser/maps/all_lat_long.txt'
results,header,run_description=parse_mapping_file(open(map_fp,'U'))
for i,val in enumerate(results):
    if val[0] and val[1] and val[2]:
        result_list.append('[\''+str(val[0])+'\','+str(val[1])+','+str(val[2])+','+str(i+1)+',\'FFFF00\']')



map_fp='/home/wwwdevuser/maps/soil_only_lat_long.txt'
results,header,run_description=parse_mapping_file(open(map_fp,'U'))
for i,val in enumerate(results):
    if val[0] and val[1] and val[2]:
        result_list.append('[\''+str(val[0])+'\','+str(val[1])+','+str(val[2])+','+str(i+1)+',\'FF0000\']')


map_fp='/home/wwwdevuser/maps/non_host_associated_lat_long.txt'
results,header,run_description=parse_mapping_file(open(map_fp,'U'))
for i,val in enumerate(results):
    if val[0] and val[1] and val[2]:
        result_list.append('[\''+str(val[0])+'\','+str(val[1])+','+str(val[2])+','+str(i+1)+',\'0000FF\']')


results=[["Bonnie OA Samples",50.25,4.216667],
["McMahon Bog Lakes",46.041014,-89.686411],
["Cansu L4",50.25,4.216667],
["Catlin DNA",78.7115,-104.8776666],
["Russian Tundra",69.43513,-97.738728],
["Russian Tundra 2", 74.462540,-97.738728],
["Bergen Mesocosm",60.269444,5.222222],
["Tatoosh Island",48.32,-124.74],
["C-MORE HOT",22.75,-158],
["McMurdo Dry Valley",-77.4348,162.1891],
["Exotic vs. Native Grassland",31.1,-97.34],
["Switchgrass Spatial Study",41.841521,-88.229872]]

for i,val in enumerate(results):
    if val[0] and val[1] and val[2]:
        result_list.append('[\''+str(val[0])+'\','+str(val[1])+','+str(val[2])+','+str(i+1)+',\'FF69B4\']')

'''



req.write('%s];' % ','.join(result_list))
req.write('window.onload=initialize;</script>')


%>

<style type="text/css">
    td{
        text-align:left;
    }
    th{
        text-align:left;
    }
    .overlay td{
        font-family:"Helvetica","Arial",serif;
        text-align:right;
        font-size:8pt;
    }
    .overlay th{
        font-family:"Helvetica","Arial",serif;
        text-align:center;
        font-size:8pt;
    }
    .usual th {
        text-decoration:none!important;
        height: 30px;
        font-size:10pt;
        color:#FFF;
        background:black;
        text-align:center;
        cursor:pointer;
        cursor:hand;
        vertical-align:middle;
        font-family:"Helvetica","Arial",serif;
    }
    .usual td {
        text-decoration:none!important;
        height: 30px;
        font-size:10pt;
        color:#FFF;
        background:black;
    }
    .usual{
        width:100%;
        color:#FFF;
    }
    .usual th:hover{
        background:blue;
    }
</style>

<div id="map_canvas" style="width:512px; height:512px;border:3px solid black"></div>

