<%
__author__ = "Jesse Stombaugh"
__copyright__ = "Copyright 2009-2010, Qiime Web Analysis"
__credits__ = ["Doug Wendel", "Jesse Stombaugh"]
__license__ = "GPL"
__version__ = "1.0.0.dev"
__maintainer__ = ["Doug Wendel", "Jesse Stombaugh"]
__email__ = "wendel@colorado.edu"
__status__ = "Development"

'''This page allows the user to change their password.'''

from mod_python import Session
from data_access_connections import data_access_factory
from enums import ServerConfig
import gc
%>

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<%
if 'portal_type' in form:
    req.write('<title>EMP</title>')
else:
    req.write('<title>Qiime</title>')
#END INDENT
%>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<link rel="shortcut icon" href="img/favicon.ico" type="image/x-icon" />
<%
if 'portal_type' in form:
    req.write('<link rel="stylesheet" href="style/emp.css" type="text/css">')
else:
    req.write('<link rel="stylesheet" href="style/qiime.css" type="text/css">')
#END INDENT
%>
<script type="text/javascript" src="./js/qiime.js"></script>
<script type="text/javascript" src="./js/jquery_validate/lib/jquery.js"></script>
<script type="text/javascript" src="./js/jquery_validate/lib/jquery.metadata.js"></script>
<script type="text/javascript" src="./js/jquery_validate/jquery.validate.js"></script>
<script type="text/javascript" src="http://code.jquery.com/jquery-latest.js"></script> 
<script type="text/javascript"> 
$(document).ready(function(){

	$("ul.subnav").parent().append("<span></span>"); //Only shows drop down trigger when js is enabled - Adds empty span tag after ul.subnav
	
	$("ul.topnav li span").click(function() { //When trigger is clicked...
		
		//Following events are applied to the subnav itself (moving subnav up and down)
		$(this).parent().find("ul.subnav").slideDown('fast').show(); //Drop down the subnav on click

		$(this).parent().hover(function() {
		}, function(){	
			$(this).parent().find("ul.subnav").slideUp('slow'); //When the mouse hovers out of the subnav, move it back up
		});

		//Following events are applied to the trigger (Hover events for the trigger)
		}).hover(function() { 
			$(this).addClass("subhover"); //On hover over, add class "subhover"
		}, function(){	//On Hover Out
			$(this).removeClass("subhover"); //On hover out, remove class "subhover"
	});

});
</script>

<!-- javascript for setting up the validation fields onload -->
<script type="text/javascript">
$.metadata.setType("attr","validate");
$(document).ready(function(){
    $("#new_user").validate({
        rules: {
            username: {
                required: true,
                email: true
            },
            new_password: "required",
            new_password_again: {
            equalTo: "#new_password"
            },
        },
    });
});
</script>

<!-- stylesheet information for the validaton fields -->
<style type="text/css">
    label {  width: 10em; }
    br { clear: both; }
    input { margin-left: .5em; float: left; border: 1px solid black; margin-bottom: .5em;  }
    input.submit { float: none; }
    input.error { border: 1px solid red; width: auto; }
    label.error {
        background: url('http://dev.jquery.com/view/trunk/plugins/validate/demo/images/unchecked.gif') no-repeat;
        padding-left: 16px;
        margin-left: .3em;
    }
    label.valid {
        background: url('http://dev.jquery.com/view/trunk/plugins/validate/demo/images/checked.gif') no-repeat;
        display: block;
        width: 16px;
        height: 16px;
    }
</style>

</head>
<body>

<div class="container">
    <div id="header">
    	 <div class="disclaimer">Please Log In</div>
    </div>
</div>
<div class="content">

<hr/>


<form target="_top" id="send_me_home" name="send_me_home" action="fusebox.psp" method="post">
    <input type="hidden" id="page" name="page" value="select_task.psp" />
</form>

<table class="header_table">
<tr><td>Change Password</td></tr>
</table>
<br/>
<%
# This function validates that the user's password is a good password and not
# just letters or numbers
def validate_password(passwd):
    conditions_met = 0
    conditions_total = 3
    if len(passwd) >= 6: 
        conditions_met += 1
        if passwd.lower() != passwd: conditions_met += 1
        if len([x for x in passwd if x.isdigit()]) > 0: conditions_met += 1
        if len([x for x in passwd if not x.isalnum()]) > 0: conditions_met += 1
    result = False
    if conditions_met >= 1: result = True
    return result

# if the url contains update acct and new pass, then we want to populate
# the fields, since the link is from an email sent to them when they forgot 
# their password. 
if form.has_key('update_acct') and form.has_key('new_act_code'):
    data_access= data_access_factory(ServerConfig.data_access_type)
    verify_act_code = data_access.verifyActivationCode( form["update_acct"], form["new_act_code"] )
    if verify_act_code:
%>
        <form id="new_user" method="post" action="change_password.psp">
            <input type="hidden" id="new_act_code" name="new_act_code" value="<%=    form['new_act_code']%>" />
            <table>
            <tr><td>Username (email):</td><td><input type="text" id="update_username" name="update_username" value="<%=       form['update_acct']%>" /></td></tr>
            <tr><td>New Password:</td><td><input type="password" id="new_password" name="new_password" /></td></tr>
            <tr><td>Re-Type Password:</td><td><input type="password" id="new_password_again" name="new_password_again" /></td></tr>
            <tr><td colspan="2"><input type="submit" value="Change Password"></tr>
            </table>
        </form>
<%
    else:
%>
        <p>This activation code is no longer valid, please submit another "forgot password" request.</p>
<%
# if the form was submitted and contains a username, then we want to 
# authenticate the user and update their password
elif form.has_key('update_username') and form.has_key('new_act_code'):
    # validate that the username provided is correct
    data_access= data_access_factory(ServerConfig.data_access_type)

    verify_act_code = data_access.verifyActivationCode( form["update_username"], form["new_act_code"] )
    if verify_act_code:
        # if the password is a good one then update their password, otherwise
        # tell them to create a new password
        good_password=validate_password(form["new_password"])
        if good_password:
            updated_data = data_access.updateWebAppUserPwd( form["update_username"], form["new_password"] )
            req.write('<p>Your password has been updated!</p>')
            req.write('<input type="button" onclick="send_me_home.submit();" value="Log In" \>')
        else:
            #req.write('<div style="color:red;"><p><b>New Password Invalid!</b> Your password must contain at least 2 of following and have a length greater than 6 characters:</p><ul><li>non-alphanumeric characters </li><li> upper-case alphanumeric characters </li><li> lower-case alphanumeric characters </li><li> numbers </li></ul><p>For Example: "Password","password1" or "password*"</p></div>')
            req.write('<div style="color:red;"><p><b>New Password Invalid! Your password must be 6 or more characters.</b></p></div>')
%>
            <form id="new_user" method="post" action="change_password.psp">
                <input type="hidden" id="new_act_code" name="new_act_code" value="<%=           form['new_act_code']%>" />
                <table>
                <tr><td>Username (email):</td><td><input type="text" id="update_username" name="update_username" /></td></tr>
                <tr><td>New Password:</td><td><input type="password" id="new_password" name="new_password" /></td></tr>
                <tr><td>Re-Type Password:</td><td><input type="password" id="new_password_again" name="new_password_again" /></td></tr>
                <tr><td colspan="2"><input type="submit" value="Change Password" /></tr>
                </table>
            </form>
<%
    else:
        req.write('<p style="color:red;">Invalid Activation Code or you are using the wrong username!</p>')
# if the form was submitted and contains a username, then we want to 
# authenticate the user and update their password
elif form.has_key('username'):
    
    # validate that the username provided is correct
    data_access= data_access_factory(ServerConfig.data_access_type)
    user_data = data_access.authenticateWebAppUser( form["username"], form["old_password"] )
    if ( user_data ):
        
        # if the password is a good one then update their password, otherwise
        # tell them to create a new password
        good_password=validate_password(form["new_password"])
        if good_password:
            updated_data = data_access.updateWebAppUserPwd( form["username"], form["new_password"] )
            req.write('<p>Your password has been updated!</p>')
            req.write('<input type="button" onclick="send_me_home.submit();" value="Log In" \>')
        else:
            #req.write('<div style="color:red;"><p><b>New Password Invalid!</b> Your password must contain at least 2 of following and have a length greater than 6 characters:</p><ul><li>non-alphanumeric characters </li><li> upper-case alphanumeric characters </li><li> lower-case alphanumeric characters </li><li> numbers </li></ul><p>For Example: "Password","password1" or "password*"</p></div>')
            req.write('<div style="color:red;"><p><b>New Password Invalid! Your password must be 6 or more characters.</b></p></div>')
%>
            <form id="new_user" method="post" action="change_password.psp">
                <table>
                <tr><td>Username (email):</td><td><input type="text" id="username" name="username" /></td></tr>
                <tr><td>Old Password:</td><td><input type="password" id="old_password" name="old_password" /></td></tr>
                <tr><td>New Password:</td><td><input type="password" id="new_password" name="new_password" /></td></tr>
                <tr><td>Re-Type Password:</td><td><input type="password" id="new_password_again" name="new_password_again" /></td></tr>
                <tr><td colspan="2"><input type="submit" value="Change Password" /></tr>
                </table>
            </form>
<%
        #
    else:
        # if the username/pass are invalid, have the user fillout the form again
        req.write('<p style="color:red;">Invalid Username/Password!</p>')
%>
        <form id="new_user" method="post" action="change_password.psp">
            <table>
            <tr><td>Username (email):</td><td><input type="text" id="username" name="username" /></td></tr>
            <tr><td>Old Password:</td><td><input type="password" id="old_password" name="old_password" /></td></tr>
            <tr><td>New Password:</td><td><input type="password" id="new_password" name="new_password" /></td></tr>
            <tr><td>Re-Type Password:</td><td><input type="password" id="new_password_again" name="new_password_again" /></td></tr>
            <tr><td colspan="2"><input type="submit" value="Change Password" /></tr>
            </table>
        </form>
<%
    #
else:
    # if this page is loaded (not through link in email or form submission),
    # then create the default page
%>
    <form id="new_user" method="post" action="change_password.psp">
        <table>
        <tr><td>Username (email):</td><td><input type="text" id="username" name="username" /></td></tr>
        <tr><td>Old Password:</td><td><input type="password" id="old_password" name="old_password" /></td></tr>
        <tr><td>New Password:</td><td><input type="password" id="new_password" name="new_password" /></td></tr>
        <tr><td>Re-Type Password:</td><td><input type="password" id="new_password_again" name="new_password_again" /></td></tr>
        <tr><td colspan="2"><input type="submit" value="Change Password" /></tr>
        </table>
    </form>
<%
#
data_access = None
gc.collect()
%>
</body>
</html>
